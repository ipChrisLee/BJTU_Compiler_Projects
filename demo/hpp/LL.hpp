#pragma once
#include <map>
#include <cstdint>
#include <string>


namespace LL {
using NodeID_t = int64_t;
enum class TokenType {
	A, 
	I, 
	LParam, 
	M, 
	RParam, 
};

inline std::string get_token_type_name(TokenType token) {
	switch (token) {
		case TokenType::A:
			return "A";
		case TokenType::I:
			return "I";
		case TokenType::LParam:
			return "LParam";
		case TokenType::M:
			return "M";
		case TokenType::RParam:
			return "RParam";
	}
}

static const std::map<NodeID_t, TokenType> nodeType{
	{105553171907448, TokenType::LParam},
	{105553171907544, TokenType::RParam},
	{105553171907640, TokenType::M},
	{105553171907736, TokenType::A},
	{105553171907832, TokenType::A},
	{105553171907928, TokenType::M},
	{105553171908024, TokenType::I},
	{105553171908120, TokenType::I},
	{105553171908216, TokenType::I},
	{105553171908312, TokenType::I},
	{105553171908408, TokenType::I},
	{105553171908504, TokenType::I},
	{105553171908600, TokenType::I},
	{105553171908696, TokenType::I},
	{105553171908792, TokenType::I},
	{105553171908888, TokenType::I},
	{105553171908984, TokenType::I},
	{105553171909080, TokenType::I},
	{105553171909176, TokenType::I},
	{105553171909272, TokenType::I},
	{105553171909368, TokenType::I},
	{105553171909464, TokenType::I},
	{105553171909560, TokenType::I},
	{105553171909656, TokenType::I},
	{105553171909752, TokenType::I},
	{105553171909848, TokenType::I},
};

static const std::map<NodeID_t, std::map<char, NodeID_t>> edges{
	{105553171907352, {{40, 0x600003510378},{41, 0x6000035103d8},{42, 0x600003510438},{43, 0x600003510498},{45, 0x6000035104f8},{47, 0x600003510558},{48, 0x6000035105b8},{49, 0x600003510618},{50, 0x600003510678},{51, 0x6000035106d8},{52, 0x600003510738},{53, 0x600003510798},{54, 0x6000035107f8},{55, 0x600003510858},{56, 0x6000035108b8},{57, 0x600003510918},}},
	{105553171907448, {}},
	{105553171907544, {}},
	{105553171907640, {}},
	{105553171907736, {}},
	{105553171907832, {}},
	{105553171907928, {}},
	{105553171908024, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908120, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908216, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908312, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908408, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908504, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908600, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908696, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908792, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908888, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171908984, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909080, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909176, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909272, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909368, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909464, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909560, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909656, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909752, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
	{105553171909848, {{48, 0x600003510978},{49, 0x6000035109d8},{50, 0x600003510a38},{51, 0x600003510a98},{52, 0x600003510af8},{53, 0x600003510b58},{54, 0x600003510bb8},{55, 0x600003510c18},{56, 0x600003510c78},{57, 0x600003510cd8},}},
};

static const NodeID_t start = 105553171907352;
}
